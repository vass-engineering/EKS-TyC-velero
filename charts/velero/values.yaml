image:
  repository: velero/velero
  tag: v1.8.1
  pullPolicy: IfNotPresent
resources:
  requests:
    cpu: 500m
    memory: 128Mi
  limits:
    cpu: 1000m
    memory: 512Mi
dnsPolicy: ClusterFirst
initContainers:
   - name: velero-plugin-for-aws
     image: velero/velero-plugin-for-aws:v1.4.1
     imagePullPolicy: IfNotPresent
     volumeMounts:
       - mountPath: /target
         name: plugins
metrics:
  enabled: true
  scrapeInterval: 30s
  scrapeTimeout: 10s
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8085"
    prometheus.io/path: "/metrics"
  serviceMonitor:
    enabled: false
kubectl:
  image:
    repository: docker.io/bitnami/kubectl
upgradeCRDs: true
cleanUpCRDs: false
configuration:
  provider:
  backupStorageLocation:
    name: default
    provider: aws
    bucket: backupeks
    caCert:
    prefix: eks-tyc-1-22
    default: true
    accessMode: ReadWrite
    config: 
      region: minio
      s3ForcePathStyle: "true"
      s3Url: http://eks-tyc-minio.eks-tyc-minio.svc.cluster.local:9000
      publicUrl: minio.tyc-1-22.108.128.15.214.nip.io
  backupSyncPeriod:
  resticTimeout:
  restoreResourcePriorities:
  restoreOnlyMode:
  clientQPS:
  clientBurst:
  disableControllers:
  extraEnvVars: {}
  features:
  logLevel:
  logFormat:
  defaultVolumesToRestic:
rbac:
  create: true
  clusterAdministrator: true
  clusterAdministratorName: cluster-admin
serviceAccount:
  server:
    create: true
    name: eks-tyc-velero-server
    annotations:
    labels:
credentials:
  useSecret: true
  name: 
  existingSecret: cloud-credentials
  extraSecretRef: ""
backupsEnabled: true
snapshotsEnabled: false
deployRestic: true
restic:
  podVolumePath: /var/lib/kubelet/pods
  privileged: false
  priorityClassName: ""
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  useScratchEmptyDir: true
  dnsPolicy: ClusterFirst
  podSecurityContext:
    runAsUser: 0